Updated TypeScript Code (with dotted lines)

Weâ€™ll use a small helper to draw labels with dotted underline space.

import PDFDocument from "pdfkit";
import fs from "fs";

interface Patient {
  id: string;
  name: string;
  fatherName: string;
  religionNationality: string;
  address: string;
  age: number;
  sex: string;
}

let caseCounter = 1;

function generateCaseSheetNumber(patientId: string): string {
  return `SCS${patientId}-${String(caseCounter).padStart(2, "0")}`;
}

// Helper: draw label + dotted underline (flexible width)
function drawField(doc: PDFKit.PDFDocument, label: string, value: string, x: number, y: number, underlineWidth = 250) {
  doc.font("Helvetica-Bold").text(label, x, y, { continued: true });
  const textWidth = doc.widthOfString(label);
  const startX = x + textWidth + 5;
  const endX = startX + underlineWidth;

  // Draw dotted line
  doc.moveTo(startX, y + 12)
     .lineTo(endX, y + 12)
     .dash(2, { space: 2 })
     .stroke();

  // Reset dash
  doc.undash();

  // Write value (on top of line if available)
  if (value) {
    doc.font("Helvetica").text(value, startX + 2, y);
  }
}

export function createSurgicalCaseSheet(patient: Patient) {
  const doc = new PDFDocument({ margin: 50 });
  const filePath = `surgical_case_sheet_${patient.id}.pdf`;
  doc.pipe(fs.createWriteStream(filePath));

  const caseSheetNo = generateCaseSheetNumber(patient.id);

  // ---------- HEADER ----------
  doc.fontSize(18).text("NAKSHATRA HOSPITAL", { align: "center" });
  doc.fontSize(10).text("Opp. to SBI Bank, Thurkappally (V&M), Yadadri Bhongiri District, T.S.", { align: "center" });
  doc.text("Cell: 7093939205", { align: "center" });

  doc.moveDown();
  doc.fontSize(14).text("SURGICAL CASE SHEET", { align: "center", underline: true });

  // Case No (left), Date (right)
  doc.moveDown();
  doc.fontSize(11);
  doc.text(`No.: ${caseSheetNo}`, 50, doc.y, { continued: true });
  doc.text(`Date: 10.03.2025`, { align: "right" });

  let y = doc.y + 10;

  // ---------- PATIENT DETAILS ----------
  doc.fontSize(11);
  drawField(doc, "Name of the Patient :", patient.name, 50, y); y += 25;
  drawField(doc, "Husbandâ€™s/Fatherâ€™s Name :", patient.fatherName, 50, y); y += 25;

  // Religion & Nationality + Address same line
  drawField(doc, "Religion & Nationality :", patient.religionNationality, 50, y, 150);
  drawField(doc, "Address :", patient.address, 300, y, 150);
  y += 25;

  // Age + Sex same line
  drawField(doc, "Age :", patient.age.toString(), 50, y, 50);
  drawField(doc, "Sex :", patient.sex, 150, y, 50);
  y += 40;

  // ---------- BLANK SECTIONS ----------
  const sections = [
    "Diagnosis", "Nature of Operation", "Date of Admission",
    "Date of Operation", "Date of Discharge",
    "Complaints & Duration", "History of Present Illness"
  ];
  sections.forEach((sec) => {
    drawField(doc, sec + " :", "", 50, y, 400);
    y += 25;
  });

  // ---------- INVESTIGATIONS & EXAM SIDE BY SIDE ----------
  y += 10;
  const invStartX = 50;
  const examStartX = 320;

  doc.fontSize(12).font("Helvetica-Bold").text("INVESTIGATION:", invStartX, y);
  doc.text("ON EXAMINATION:", examStartX, y);

  const investigations = [
    "1) Hb%", "2) E.S.R.", "3) C.T.", "4) B.T.", "5) Bl. Grouping",
    "6) RPL", "7) R.B.S", "8) Urine Sugar", "9) R.M.", "10) X-ray",
    "11) E.C.G", "12) Blood Urea", "13) Serum Creatinine",
    "14) Serum Bilirubin", "15) HBS A.G"
  ];

  const exam = [
    "G.C.", "Temp. ......... Â°F", "P.R. ......... /Min",
    "B.P. ......... mmHG", "R.R. ......... /Min",
    "Heart", "Lungs", "Abd.", "C.N.S."
  ];

  doc.fontSize(10).font("Helvetica");
  let invY = y + 20;
  investigations.forEach((item) => {
    drawField(doc, item, "", invStartX, invY, 120);
    invY += 20;
  });

  let examY = y + 20;
  exam.forEach((item) => {
    drawField(doc, item, "", examStartX, examY, 120);
    examY += 20;
  });

  // ---------- END ----------
  doc.end();
  console.log(`âœ… PDF generated: ${filePath} (Case Sheet No: ${caseSheetNo})`);
  caseCounter++;
}

// Example
createSurgicalCaseSheet({
  id: "12345",
  name: "Mrs. M. Upendra",
  fatherName: "",
  religionNationality: "Hindu / Indian",
  address: "Hyderabad",
  age: 50,
  sex: "F"
});

ðŸ”¹ Whatâ€™s New

Added drawField() helper â†’ prints label + dotted underline + value if provided.

Multi-field rows (Religion & Address, Age & Sex) are aligned on one line.

All sections now have dotted underline across page (like in your scanned sheet).

Investigations (left) + On Examination (right) both have dotted underlines.